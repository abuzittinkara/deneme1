version: '3.8'

services:
  # API Servisi
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-production}
    image: fisqos-api:latest
    container_name: fisqos-api
    restart: unless-stopped
    ports:
      - "${PORT:-9092}:9092"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=9092
      - HOST=0.0.0.0
      - APP_NAME=Fisqos API
      - APP_VERSION=1.0.0
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017/fisqos}
      - MONGODB_USER=${MONGODB_USER:-admin}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-password}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-fisqos}
      - MONGODB_AUTH_SOURCE=${MONGODB_AUTH_SOURCE:-admin}
      - REDIS_ENABLED=${REDIS_ENABLED:-true}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-15m}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - TZ=${TZ:-UTC}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fisqos-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    command: ["node", "--max-old-space-size=512", "dist/src/app.js"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9092/api/config/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s



  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: fisqos-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE:-fisqos}
    volumes:
      - mongodb-data:/data/db
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fisqos-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    command: ["--auth", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]

  # Redis
  redis:
    image: redis:7.0-alpine
    container_name: fisqos-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - fisqos-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}

  # Nginx
  nginx:
    image: nginx:1.25-alpine
    container_name: fisqos-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
      - ./uploads:/var/www/uploads
      - nginx-logs:/var/log/nginx
    depends_on:
      api:
        condition: service_healthy
    networks:
      - fisqos-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  fisqos-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data:
  nginx-logs:
